@page "/checkin"

@using LoneWorkerCheckin.Api.Client
@using LoneWorkerCheckin.Api.Controllers
@using LoneWorkerCheckin.Blazor.ViewModels

@inject CheckinPageViewModel _viewModel;



<PageTitle>@_viewModel.PageTitle</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true">@_viewModel.PageTitle</MudText>


<div class="d-flex align-content-center">
           
    <MudStack>
      
        <MudStack Row="true" Justify="Justify.SpaceBetween">
            <MudText class="mb-2" Typo="Typo.h6">Region</MudText>
           
                <MudSelect T="string" Variant="Variant.Filled" ValueChanged="_viewModel.OnSelectedRegionChanged">
                @if (_viewModel.RegionList != null)
                {
                    @foreach (var item in _viewModel.RegionList)
                    {
                        <MudSelectItem Value="@item.RegionId">@item.RegionName</MudSelectItem>
                    }
                }
                </MudSelect>
            @if (_viewModel.ShowLoading && _viewModel.RegionList == null)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            }
        </MudStack>



        <MudStack Row="true" Justify="Justify.SpaceBetween">
            <MudText class="mb-2" Typo="Typo.h6">Site</MudText>
           
                <MudSelect T="string" Variant="Variant.Filled">
                @if (_viewModel.SiteList != null)
                {
                    @foreach (var item in _viewModel.SiteList)
                    {
                        <MudSelectItem Value="@item.SiteId">@item.SiteName</MudSelectItem>
                    }
                }
                </MudSelect>

            
            @if (_viewModel.ShowLoading && _viewModel.SiteList == null)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            }
        </MudStack>


        <MudStack Row="true" Justify="Justify.SpaceBetween">
            <MudText class="mb-2" Typo="Typo.h6">Location</MudText>
           
                <MudSelect T="string" Variant="Variant.Filled">
                @if (_viewModel.LocationList != null)
                {
                    @foreach (var item in _viewModel.LocationList)
                    {
                        <MudSelectItem Value="@item.LocationId">@item.LocationName</MudSelectItem>
                    }
                }
                </MudSelect>

            
            @if (_viewModel.ShowLoading && _viewModel.LocationList == null)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            }
        </MudStack>

    </MudStack>
      
</div>

@code
{
    protected override async Task OnInitializedAsync()
        => await _viewModel.OnInitializedAsync();
}
